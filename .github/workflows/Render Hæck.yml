name: Render H√¶ck
on:
  schedule:
    - cron: '*/30 * * * *'  # Base schedule every 30 minutes
  workflow_dispatch:        # Manual trigger option

jobs:
  ping-servers:
    timeout-minutes: 55      # Hard timeout to prevent hangs
    runs-on: ubuntu-latest
    steps:
    - name: Ping Render servers
      run: |
        # ======================
        # SERVER CONFIGURATION
        # ======================
        SERVERS=(
          "https://purplebot-node-54xc.onrender.com"  # Your primary server
          # "https://backup-server-1.onrender.com"    # Uncomment to add more
          # "https://backup-server-2.onrender.com"
        )
        
        # ======================
        # PING LOGIC
        # ======================
        function ping_server {
          local url=$1
          echo "üîî Pinging $url"
          
          # Retry up to 3 times with backoff
          for attempt in {1..3}; do
            STATUS=$(curl -s -o /dev/null -w "%{http_code}" --max-time 10 "$url")
            
            if [[ "$STATUS" =~ ^(2|3)[0-9]{2}$ ]]; then
              echo "‚úÖ Success (HTTP $STATUS) on attempt #$attempt"
              return 0
            else
              echo "‚ö†Ô∏è Attempt $attempt failed (HTTP $STATUS)"
              sleep $((attempt * 3))  # Progressive backoff (3,6,9s)
            fi
          done
          
          echo "‚ùå All attempts failed for $url"
          return 1
        }

        # ======================
        # EXECUTION FLOW
        # ======================
        # Initial ping to all servers
        for server in "${SERVERS[@]}"; do
          ping_server "$server"
          sleep 1  # Brief pause between servers
        done

        # Random delay (8-13 minutes)
        DELAY=$(( 480 + RANDOM % 300 ))  # 480-780 seconds
        echo "‚è≥ Next ping in $((DELAY/60)) minutes ($DELAY seconds)..."
        sleep $DELAY

        # Final ping before job ends
        echo "üîÑ Follow-up ping after delay..."
        for server in "${SERVERS[@]}"; do
          ping_server "$server"
          sleep 1
        done

        echo "üèÅ Ping cycle completed"
